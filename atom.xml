<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pcd&#39;s Blog</title>
  
  <subtitle>Hello,world.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-12T05:21:02.366Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>裴晨栋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tags</title>
    <link href="http://yoursite.com/2020/07/12/tags/"/>
    <id>http://yoursite.com/2020/07/12/tags/</id>
    <published>2020-07-12T05:21:02.000Z</published>
    <updated>2020-07-12T05:21:02.366Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JDBC学习</title>
    <link href="http://yoursite.com/2020/07/12/JDBC%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/07/12/JDBC%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-07-11T16:00:00.000Z</published>
    <updated>2020-07-12T05:15:42.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JDBC学习"><a href="#JDBC学习" class="headerlink" title="JDBC学习"></a>JDBC学习</h1><h2 id="JDBC的基本概念"><a href="#JDBC的基本概念" class="headerlink" title="JDBC的基本概念"></a>JDBC的基本概念</h2><p>​        概念:Java DataBase Connectivity Java数据库连接,Java语言操作数据库</p><blockquote><p>​        JDBC本质:其实是官方定义的一套操作所有关系型数据库的规则,即接口.各个数据库厂商去实现这个接口,提供数据库驱动jar包.我们可以使用这套接口(JDBC)编程,真正执行的代码是驱动jar包中的实现类</p></blockquote><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤:"></a>步骤:</h3><ol><li><p>.导入驱动jar包</p><pre><code>1.复制C:\java\mysql-connector-java-8.0.20\mysql-connector-java-8.0.20.jar到项目的libs目录下 2.右键---&gt;Add As Library</code></pre></li><li><p>注册驱动</p></li><li><p>获取数据库连接对象</p></li><li><p>定义sql</p></li><li><p>获取执行sql语句的对象Statement</p></li><li><p>执行sql接收返回结果</p></li><li><p>处理结果</p></li><li><p>释放资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.导入驱动jar包</span></span><br><span class="line">   <span class="comment">//2.注册驱动</span></span><br><span class="line">   Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">   <span class="comment">//3.获取数据库连接对象</span></span><br><span class="line">   Connection connection =DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/04_mysql?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC"</span>,USER,PASS);</span><br><span class="line">   <span class="comment">//4.定义sql语句</span></span><br><span class="line">   String sql=<span class="string">"update bank set bankNo = 464861 where id = 1"</span>;</span><br><span class="line">   <span class="comment">//5.获取执行sql对象 Statement</span></span><br><span class="line">   Statement statement=connection.createStatement();</span><br><span class="line">   <span class="comment">//6.执行sql</span></span><br><span class="line">   <span class="keyword">int</span> count=statement.executeUpdate(sql);</span><br><span class="line">   <span class="comment">//处理结果</span></span><br><span class="line">   System.out.println(count);</span><br><span class="line">   <span class="comment">//释放资源</span></span><br><span class="line">   statement.close();</span><br><span class="line">   connection.close();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入jar包   </span></span><br><span class="line"></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册驱动,获取连接</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//定义SQL</span></span><br><span class="line">            String sql=<span class="string">"select * from user where username=? and password=? "</span>;</span><br><span class="line">            <span class="comment">//获取执行对象</span></span><br><span class="line">             preparedStatement=connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//result指的是所求数据节点的上一个位置</span></span><br><span class="line">            <span class="comment">//给？赋值</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>,username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>,password);</span><br><span class="line">            <span class="comment">//执行</span></span><br><span class="line">            resultSet=preparedStatement.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> resultSet.next();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.close(resultSet,preparedStatement,connection);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="详解各个对象"><a href="#详解各个对象" class="headerlink" title="详解各个对象"></a>详解各个对象</h2><ul><li><p>DriverManger:驱动管理对象</p><blockquote><p>用于管理一组JDBC驱动服务的基本程序</p></blockquote><blockquote><ol><li><p>注册驱动:</p><p>​        static void registerDriver(Driver driver):注册于给定的驱动程序的DriverManger</p><p>​        写代码使用: Class.forName(“com.mysql.cj.jdbc.Driver”);</p><p>注意:mysql5之后的驱动jar包可以省略驱动注册驱动的步骤</p></li></ol></blockquote><blockquote><p>​    2.获取数据库连接:</p><p>​        方法:static Connection getConnection(String url,String user,String password)</p><p>​        参数:</p><p>​                *url:指定连接的路径:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*locahost:IP地址 3306:本机的端口号 test_demo:库名 useSSL:MySQL 8.0 以上版本不需要建立 SSL 连接的,需要显示关闭 allowPublicKeyRetrieval=true 允许客户端从服务器获取公钥。serverTimezone=UTC:指定时区(UTC代表的是全球标准时间)*/</span></span><br><span class="line"><span class="comment">//语法:jdbc:mysql:IP地址(域名):端口号/数据库名称?SSL设置关闭&amp;客户端获取公钥=设置指定时区</span></span><br><span class="line">jdbc:mysql:<span class="comment">//localhost:3306/test_demo?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC</span></span><br></pre></td></tr></table></figure><p>​                *user:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名---&gt;root </span><br></pre></td></tr></table></figure><p>​                *password:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码---&gt;password</span><br></pre></td></tr></table></figure></blockquote></li><li><p>Connection:数据库连接对象</p><blockquote><p>功能:</p><p>​        1.获取执行sql的对象</p><p>​            *Statement createStatement();</p><p>​            *PreparedStatement prepareStatement(String url) 创建一个PrepareStatement对象,用于将参数sql语句发送至数据库</p><p>​         2.开启事务</p><p>​             *开启事务: void setAutoCommit(boolean autoCommit)  :调用该方法设置参数为false,即开启事务</p><p>​             *提交事务:commit();</p><p>​             *回滚事务:rollback();</p></blockquote></li><li><p>Statement:执行sql的对象</p><blockquote><p>1.执行sql</p><p>​            1.bolean execute(String url):可以执行任意的slq </p><p>​            2.int executeUpdate(String url): 执行DML(insert update delete)语句,DDL(create alter drop)语句</p><p>​                *返回值:影响的行数,可以通过影响的行数判断DML语句是否执行成功,返回值&gt;0则执行成功,否则则执行失败</p><p>​            3.ResuleSet executeQuery(String sql) 执行DML(select)语句</p></blockquote></li><li><p>ResultSet:</p><blockquote><p>结果集对象,封装查询的结果</p><p>next()：游标向下一行移动</p><p>getxxx(): 获取数据</p><p>​        xxx代表数据类型 如:int getInt()，String getString()</p><p>​        参数:int 代表列的编号 从1开始     如:getString(1)</p><p>​                String 代表列名称                 如:getString(“price”)</p></blockquote></li><li><p>ProparddStatement:执行sql的对象 </p></li></ul><h2 id="抽取JDBC工具类-JDBCUtils"><a href="#抽取JDBC工具类-JDBCUtils" class="headerlink" title="抽取JDBC工具类: JDBCUtils"></a>抽取JDBC工具类: JDBCUtils</h2><h3 id="目的-简化书写"><a href="#目的-简化书写" class="headerlink" title="目的:简化书写"></a>目的:简化书写</h3><h3 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h3><ol><li><p>注册驱动也抽取</p></li><li><p>抽取一个方法获取连接对象</p><ol><li><p>需求:不想传递参数(麻烦),还得保证工具类的通用性</p></li><li><p>解决:配置文件</p><p>​    jdbc.properties</p><p>​    url=</p><p>​    user=</p><p>​    password=</p><p>​    Driver=</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/04_mysql?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=UTC</span></span><br><span class="line">user=root</span><br><span class="line">password=root</span><br><span class="line">driver=com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure></li></ol></li></ol><p>3.抽取一个方法释放资源</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现:"></a>实现:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.plaf.nimbus.State;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> peichendong</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 文件的读取,只需要读取一次即可拿到这些值,使用静态代码块</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//读取资源文件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//加载文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.创建Properties集合类</span></span><br><span class="line">            Properties properties=<span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">//获取src路径下的文件的方式---&gt;ClassLoader类加载器</span></span><br><span class="line">            ClassLoader classLoader=JdbcUtils<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;</span><br><span class="line">            URL res=classLoader.getResource(<span class="string">"src/jdbc.properties"</span>);</span><br><span class="line">            String path=res.getPath();</span><br><span class="line">            properties.load(<span class="keyword">new</span> FileReader(path));</span><br><span class="line"></span><br><span class="line">            url=properties.getProperty(<span class="string">"url"</span>);</span><br><span class="line">            user=properties.getProperty(<span class="string">"user"</span>);</span><br><span class="line">            password=properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line">            String driver = properties.getProperty(<span class="string">"driver"</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class.forName(driver);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement,Connection connection)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JDBC控制事务"><a href="#JDBC控制事务" class="headerlink" title="JDBC控制事务"></a>JDBC控制事务</h2><h3 id="1-事务"><a href="#1-事务" class="headerlink" title="1.事务"></a>1.事务</h3><blockquote><p>事务:一个包含多个步骤的业务操作,如果这个业务被事务管理,则这多个步骤要么同时成功,要么同时失败</p></blockquote><h3 id="2-操作"><a href="#2-操作" class="headerlink" title="2.操作"></a>2.操作</h3><ol><li>开启事务</li><li>提交事务</li><li>回滚事务</li></ol><h3 id="3-使用connection对象来管理事务"><a href="#3-使用connection对象来管理事务" class="headerlink" title="3.使用connection对象来管理事务"></a>3.使用connection对象来管理事务</h3><ul><li>开启事务:setAutoCommit(boolean autoCommit):调用该方法设置参数为false,即开启事务<ul><li>在执行sql之前开启事务</li></ul></li><li>提交事务:commit()<ul><li>当所有sql都执行之后提交事务</li></ul></li><li>回滚事务:rollback()<ul><li>在catch中回滚事务</li></ul></li></ul><h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><ol><li><p>概念:其实就是一个容器(集合),存放数据库连接的容器</p><ol><li>当系统初始化好后,容器被创建,当用户来访问数据库时,从容器中获取连接对象,用户访问完之后,将连接对象归还给容器。</li></ol></li><li><p>好处:</p><ol><li>节约资源</li><li>用户访问高效</li></ol></li><li><p>实现:</p><ol><li><p>标准接口:DataSource         java.sql包下</p><ol><li>方法:<ul><li>获取连接:getConnection()</li><li>归还连接:如果连接对象Connection是从连接池中获取的,那么调用Connection.close()方法,咋不会关闭连接,而是归还连接</li></ul></li></ol></li><li><p>一般我们不去实现它,有数据库厂商来实现</p><ol><li>C3P0:数据库连接技术</li><li>Druid:数据库连接池实现技术,由阿里巴巴提供的</li></ol></li><li></li></ol></li></ol><ol start="4"><li><ol><li><ul><li><ul><li></li></ul></li></ul></li></ol></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JDBC学习&quot;&gt;&lt;a href=&quot;#JDBC学习&quot; class=&quot;headerlink&quot; title=&quot;JDBC学习&quot;&gt;&lt;/a&gt;JDBC学习&lt;/h1&gt;&lt;h2 id=&quot;JDBC的基本概念&quot;&gt;&lt;a href=&quot;#JDBC的基本概念&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
</feed>
